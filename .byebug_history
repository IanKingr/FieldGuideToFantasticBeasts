c
params
c
like_params[:beast_id]
params
c
x
params.require(:like).permit(:beast_id)[:beast_id].to_i
params.require(:like).permit(:beast_id)[:beast_id]
params.require(:like).permit(:beast_id)
params.require(:like)
params
c
n
nn
n
nn
n
s
beast_params
c
params.require(:beast).permit(:name)
params.require(:beast)
params
c
a.require(:beast).permit(:name)
a.require(:beast)
a= {beast:params}
params
params.require(:beast)
params
c
@beasts.where(id:2)[0].name
@beasts.where(id:2)[0]
@beasts.where(id:2).where(id:2)
@beasts.where(id:2).name
@beasts.where(id:2)
@beasts[0]
@beasts
@beasts[1]
@averages[23]
@averages
@beasts[1]
@beasts[key]
@beasts.where(id:23)
@beasts.where(id:23)[:name]
@beasts.where(id:23)[name]
@beasts.where(id:23)
@beasts.where(id:23).name
@beasts.where(id:23)
@beasts.find(id: 23)
@beasts[1]
@beasts[id:23]
@beasts[23]
@beasts
@beasts[key]
key
@best_beast
c
cc
c
@beasts[key].name
@beasts[key]
c
Beast.order(:rating)[1]
Beast.order(:rating)
Beast.order(:rating).first
Beast.order(:rating)
Beast
Beasts
a.order(:review)
a.order(:review.rating)
a.order(:rating)
a.order()
a = @beasts.joins(:reviews).group("beasts.id").average("reviews.rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating").where("rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating").order_by("rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating").orderby("rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating").order("rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating").order("reviews.rating")
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating")
@averages
@beasts
length
@query_average
@total_beasts
c
length
@total_beasts
@length
@query_average
c
sum/7.0
sum
@averages[28].to_f
@averages[19].to_f
@averages[12].to_f
@averages[18].to_f
@averages[16].to_f
@averages[16].to_i
sum.to_f/@averages.length
sum.to_f
sum
@averages.keys.each do |key| sum += @averages[key] end
sum
sum = 0
@averages.keys.each do |key|
@averages[16]
@averages
@averages.class
@averages.inject(0.0) { |sum,el| sum + el } / averages.size
@averages.sum.to_i
@averages.sum
@averages.sum()/@averages.length.to_f
@averages.sum/@averages.length.to_f
@averages.sum
n
s
@beasts.length
@beasts
c
(8.8123123).round(2)
(8.8).round(2)
(8.8).round
ROUND(8.8)
round(8.8)
Math.round(@averages[beast.id])
@averages[beast.id]
c
@beasts.joins(:reviews).group("beasts.id").average("reviews.rating")
Beast.joins(:reviews).group("beasts.id").average("reviews.rating")
Beast.joins(:reviews).group("beasts.id").average("reviews.rating”)
c
asd
c
like_params[:beast_id].to_i
like_params
c
like_params[:beast_id].to_i
like_params[:beast_id]
like_params
c
json.reviews
json.reviews do json.array! @reviews do |review| json.username review.user.username end end
c
x
Review.where("beast_id = ?", params[:data][:beast_id].to_i)
params[:data][:beast_id].to_i
c
n
c
quit
json.extract! @reviews do |review| json.username review.user.username end
json.array! @reviews do |review| json.username review.user.username end
json.array! @reviews do |review|
@reviews.user
@reviews
c
@beasts
n
Beast.where("affinity_id = ?", params[:data][:affinity_id].to_i)
params
c
params
cparams
c
Beast.where("affinity_id = ?", params[:data][:affinity_id].to_i)
Beast.where(params[:data])
Beast.find_by(params[:data])
params[:data][:affinity_id].to_i
params[:data][:affinity_id].to_int
params[:data][:affinity_id]
params[:affinity_id]
params[:data][:affinity_id]
JSON.parse(params)
params[:data][:affinity_id]
params[:data]
params[:affinity_id]
params
c
@beast.errors.full_messages
@beast.errors
c
@user
c
n
@beast
c
n
s
params[:author_id]
params.permit(:author_id)
params
c
@user
c
@user
c
@user
c
@user
user
c
@user
c
      password: params[:password])
      username: params[:username],
User.new(
User.new(params)
params[:username]
params
user_params
c
n
